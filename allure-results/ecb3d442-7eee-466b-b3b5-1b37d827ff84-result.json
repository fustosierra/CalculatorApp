{"name":"roundingMultiplyOperationFromNegativeNumberToZero()","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"expected: <Result: 0> but was: <Result: -0.0000001>","trace":"org.opentest4j.AssertionFailedError: expected: <Result: 0> but was: <Result: -0.0000001>\n\tat org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)\n\tat org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)\n\tat org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n\tat com.calculator.rounding.RoundingMultiplyOperationTests.roundingMultiplyOperationFromNegativeNumberToZero(RoundingMultiplyOperationTests.java:79)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\n"},"stage":"finished","description":"","steps":[],"attachments":[],"parameters":[],"start":1722995983018,"stop":1722995983892,"uuid":"ecb3d442-7eee-466b-b3b5-1b37d827ff84","historyId":"59688b1aeaa9581b94b56ce10976efc3","fullName":"com.calculator.rounding.RoundingMultiplyOperationTests.roundingMultiplyOperationFromNegativeNumberToZero","labels":[{"name":"story","value":"Real Numbers Should be displayed in Standard notation for the interval -1,000,000 >= X <= 1,000,000"},{"name":"story","value":"Calculator App should round reals numbers to the closest integer when the fractional part of a decimal number exceed or is equal to 0.0000001.  Example: the result 1.0000001 for any operation should be represented as 2.0 or 2."},{"name":"story","value":"The Multiply operation should be performed on Integer and Real Numbers."},{"name":"story","value":"The command entry should start with one accepted operator followed by two commands. Operator and operands should be Followed by a space. Ex of accepted command: add 2 3"},{"name":"host","value":"PL61XFP3WJ"},{"name":"thread","value":"58308@PL61XFP3WJ.main(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.calculator.rounding.RoundingMultiplyOperationTests"},{"name":"testClass","value":"com.calculator.rounding.RoundingMultiplyOperationTests"},{"name":"testMethod","value":"roundingMultiplyOperationFromNegativeNumberToZero"},{"name":"suite","value":"com.calculator.rounding.RoundingMultiplyOperationTests"}],"links":[]}